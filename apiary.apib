FORMAT: 1A
HOST: http://example.com/api

# HC OneClick API
API documentation for Home Credit One-Click API.

## Naming conventions
- we use camelCase for all object and attribute names
- we use CAPITAL_UNDERSCORE for enum values
- we use plural in resource names

## Paging
- some resources (stated in documentation) that return collection of objects support pagination. We are using technique known as 'cursor-based pagination'.
- on request:
  - query parameter `limit` specifies maximum number of objects in returned collection
  - query parameter `after` specifies last object retrieved in previous request. Its value is usually `id` of last object retrieved in previous call, but this will be stated in documentation. Parameter `after` is used when traversing collection forwards.
  - query parameter `before` specifies first object retrieved in previous request (analogy to `after` parameter), and is used when traversing collection backwards.
  - if `before` and `after` are omitted, beginning of collection is returned, using specified sort order
  - items in collection are always sorted accoridng to attribute which could be passed in after/before parameters. Even if you specify different sorting order, this attribute will be last sorting criterion; if you do not specify sorting order, result collection will be sorted according to this attribute.
- on response:
  - `pagingInfo` object is returned as part of response body with following attributes:
    - _nextPage_ - request to retrieve next page. Either nextPage or previousPage is returned, depending whether you specify `after` or `before` parameter. If you specify neither `before` nor `after` parameter, these attributes will be omitted from response. 
    - _prevPage_ - request to retrieve previous page (see `nextPage` attribute description above).
    - _itemsPerPage_ - number of items per page


Example request:
```
curl -X GET https://api.homecredit.eu/customer/v1/my/contracts?sort=category&limit=10&after=15
```

Example response pagingInfo:

```javascript
"pagingInfo": {
    "nextPage": "/my/contracts?sort=category&limit=10&after=25"
    "itemsPerPage": 10,
}
```

## Sorting
- some resources (stated in documentation) supports result sorting. You can specify sorting attributes and order using `sort` request parameter. For ascending order, specify just attribute name; for descending order, add unary - in front of attribute name. You can specify multiple attributes for sorting, separated by comma.
- each resource that supports sorting specifies list of attributes that can be used for sorting.

Examples:
- `/public/fxrates?sort=currencyCode` - get list of FX rates sorted by attribute currencyCode
- `/public/branches?sort=-name` - get list of branches, sorted by attribute name in descending order
- `/banking/accounts?sort=accountType,-accountCurrency,accountName` - get list of accounts, sorted by type (ascending), then by currency descending and then by account name (ascending)


## Filtering
Some resources (stated in documentation) supports results filtering. Such resources have list of filters specified together with possible operations and possible values.

You can specify filtering by passing `filter` attribute. General pattern to specify filter is:

`<filterName>|<operator>|<values>`

- `filterName` - filter name from documentation
- `operator` - operator, specified in resource documentation
- `values` - one or more values for filter. Multiple values are separated by comma

Multiple filters can be specified on each request, separated by semi-colon. They are joined by "AND", so each result item must satisfy all conditions.

### Filtering examples

- get a list of partners with category in (1, 5, 10)
```
GET /general/partners?filter=category|in|1,5,10
```

- get a list of contracts with contractDate in (2016-02-10, 2016-04-28>
```
GET /general/contracts?filter=contractDate|gt|2016-02-10;contractDate|lteq|2016-04-28
```

### List of operators
| operator | meaning |
| ---      | ---     |
| lt       | less than |
| lteq       | less than or equals |
| eq       | equals    |
| gteq       | greater than or equals    |
| gt       | greater than |
| in       | value in list |

## API calls limits
When limit is reached, you receive HTTP error 429. To inform you about limits we use following headers:
- `X-Rate-Limit-Limit` - The number of allowed requests in the current period
- `X-Rate-Limit-Remaining` - The number of remaining requests in the current period
- `X-Rate-Limit-Reset` - The number of seconds left in the current period

## Response encoding
Unless stated otherwise, all responses are sent as `Content-Type: application/json; charset=utf-8`

## HTTP status codes
We use following status codes throughout the API, except for OAuth flow when response codes are prescribed in RFC
- 200 `OK` - request was successful
- 201 `Created` - request was successfull and resource was created
- 204 `No content` - we accepted your request but there is nothing to return (e.g. response is empty)
- 400 `Bad Request` - syntax error, e.g. request is missing required parameters/attributes or parameter values are of incorrect type
- 401 `Unauthorized` - your API key is wrong or user not authorized (not logged in)
- 403 `Forbidden` - access denied (e.g. user / application is not allowed to use the resource)
- 404 `Not Found` - resource could not be found
- 405 `Method Not Allowed` - specified method is not allowed for resource
- 422 `Unprocessable Entity` -  business (semantic) errors. Request is well-formed, but cannot be processed (e.g. payment due date is in past). Errors are specified in response body (see below)
- 429 `Too Many Requests` - you exceeded the rate limit (see X-Rate-Limit headers)
- 500 `Internal Server Error` - something went wrong on our side
- 503 `Service Unavailable` - there is planned service outage (TODO: should specify response headers with more details on service outage)

## Error handling
Besides HTTP status codes, which are the main indication if something goes wrong, we also use `errors` object to report more details about errors.

Errors object example:
```javascript
{
    ...

    errors: [
        {
            "code": "ERR_100,
            "message": "Invalid contract number",
            "severity": "ERROR",
            "attribute": "partyAccount.accountNumber",          // optional
            "ticketId": "UAT1:AMS:20160516-091658.450:45e4" // optional
        },
        {
            "code": 352,
            "message": "Insufficiend funds for payment order realization",
            "severity": "WARN"
        },
        {
            "code": 523,
            "message": "This order will trigger currency exchange operation",
            "severity": "INFO"
        }
    ]
}
```

Error object attributes
| attribute name | description |
| --- | --- |
| code | unique error code |
| message | human readable error description (non-localized) |
| severity | error severity (see below) |
| attribute | json path of request attribute that caused the error (optional) |
| ticketId | internal ticket ID, used for error backtracking |

There are 3 levels of error severity:

- ERROR - critical error, execution cannot continue. This MUST be indicated also by appropriate HTTP status code (`422 Unprocessable Entity`)
- WARN - non-critical error, execution can continue but further user interaction is advisable (for request to proceed, you MUST specify this error code in `override` request attribute). This MIGHT be indicated also by appropriate HTTP status code.
- INFO - information only, execution can continue without user interaction.

## Formats
- **date** and **time** uses [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatting, e.g.:
  - date is represented as `YYYY-mm-dd`. Timezone is added when necessary.
  - time is represented as `Thh:mm:ss`. Timezone is added when necessary.
  - day of week is represented as number 1..7, with 1 being Monday
  - week no. 1 is the week with the year's first Thursday in it
- **phone numbers** uses international format starting with '+' and including country code
- **numbers format** number format is defined by [JSON standard](http://www.json.org), e.g. decimals are separated by `.`



# Group Application operations

## Applications [/applications/]

### Applications [POST]
Create application

+ Request (application/json)
    + Attributes (ApplicationRequest)


+ Response 200 (application/json)

        Application was created

    + Attributes (ApplicationRequestResult)


+ Response 400 

        There was an error processing request
        
    + Attributes (Errors)    





## Application detail [/applications/{applicationId}]
Operations on specific application

+ Parameters
    + applicationId (string, required)


### Application detail by ID [GET]
Get specific application

+ Response 200 (application/json)

        Actual application data

    + Attributes (Application)


+ Response 404 

        Application does not exist
        
    + Attributes (Errors)




## Applications AdditionalData [/applications/{applicationId}/additionalData]

+ Parameters
    + applicationId (string, required)


### Add Applications Additional Data [POST]
Send additional data needed to complete the application.

+ Request (application/json)
    + Attributes (AdditionalDataRequest)


+ Response 200 (application/json)

        Data was accepted

    + Attributes (Application)


+ Response 400 

        Error in processing request.

    + Attributes (Errors)



## Applications Cancel By ApplicationId [/applications/{applicationId}/cancel{?reason}]

+ Parameters
    + applicationId (string, required)


### Cancel Application [PUT]
Cancel application, or cancel repeated payment.

+ Parameters
    + reason (enum, required) - Reason of cancellation
        + `ORDER_CANCELLED_CUSTOMER` - customer cancelled the application
        + `ORDER_CANCELLED_ITEMS` - application was cancelled because some items were unavailable
        + `ORDER_CANCELLED_OTHER` - other reason
        + `TODO`
        
        
+ Response 200
    Application was cancelled.
    
    + Body


+ Response 422
    Application cannot be cancelled
    
    + Attributes (Errors)


## Application Order [/applications/{applicationId}/order{?reason}]

+ Parameters
    + applicationId (string, required)


### Change Application Order [PUT]
Change order. Used to change order items, total amount, billing details etc.

+ Parameters
    + reason (string, optional)

        Reason for change.


+ Request (application/json)
    + Attributes (Order)


+ Response 200 (application/json)
        Order was changed

    + Attributes (Order)


+ Response 422 
    Order cannot be changed.
        
    + Attributes (Errors)    





## Cancel Applications Order  [/applications/{applicationId}/order/cancel]

+ Parameters
    + applicationId (string, required)


### Cancel Application Order [PUT]
Mark order items as cancelled

System notification. Some or all of the order items were cancelled. Based on application type and partner setting, credit note may be issued.


+ Request (application/json)
    + Attributes (OrderItemsChangeRequest)


+ Response 200 (application/json)
        Some order items or the whole order was cancelled
        

    + Attributes (Order)


+ Response 422

        Cannot cancel order items.
        
    + Attributes (Errors)    





## Applications Order Delivery [/applications/{applicationId}/order/deliver]

+ Parameters
    + applicationId (string, required)


### Deliver Applications Order [PUT]
Mark order items as delivered.

System notification. Some or all order items were delivered to customer. 
Based on application type and partner setting, application payment may be processed.


+ Request (application/json)
    + Attributes (OrderItemsChangeRequest)


+ Response 200 (application/json)
        Order items or whole order is marked as delivered.
        
    + Attributes (Order)


+ Response 422 
        Cannot process state change.
        
    + Attributes (Errors)




## Applications Order Return [/applications/{applicationId}/order/return]

+ Parameters
    + applicationId (string, required)


### Return Application Order [PUT]
Mark order items as returned.

System notification. Some or all order items were returned by customer back to e-shop.
Based on application type and partner setting, credit note may be issued.


+ Request (application/json)
    + Attributes (OrderItemsChangeRequest)


+ Response 200 (application/json)
        Order items or whole order is marked as returned.
        
    + Attributes (Order)


+ Response 422 
        Cannot process state change.
        
    + Attributes (Errors)



## Applications Order Send [/applications/{applicationId}/order/send]

+ Parameters
    + applicationId (string, required)


### Application Order Send [PUT]
Mark order items as sent

System notification. Some or all order items were shipped to customer. 
Based on application type and partner setting, application payment may be processed.

+ Request (application/json)
    + Attributes (OrderItemsChangeRequest)


+ Response 200 (application/json)
        Order items or whole order is marked as shipped.

    + Attributes (Order)


+ Response 422 
        Cannot process state change.
        
    + Attributes (Errors)




## Applications Payments  [/applications/{applicationId}/payments]

+ Parameters
    + applicationId (string, required)


### ApplicationsPaymentsByApplicationId [GET]
Get payments on specific application

List of realized payments from HC to partner. In case of repeated payment, list may contain more items.

feature | supported by resource
--- | ---
[paging](#header-paging) | yes
[sorting](#header-sorting) | no
[filtering](#header-filtering) | no

This resource supports [paging](#header-paging). As a value to `before` and `after` parameters, use `paymentId` attribute.

Collection is sorted by paymentId attribute.

+ Response 200 (application/json)
        List of payments. May be empty if no payment was processed yet.
        
    + Attributes (array[Payment], fixed-type, required)
    


+ Response 404 

        Application does not exists
        
    + Attributes (Errors)



## Applications Verify  [/applications/{applicationId}/verify]

+ Parameters
    + applicationId (string, required)


### Application Verify [POST]
Verify application with OTP sent to customer by SMS.

+ Request 
    + Attributes (number)


+ Response 200 (application/json)

        Application was verified correctly.

    + Attributes (Application)


+ Response 422

        Application was not verified.

    + Attributes (Errors)



## Invoices [/invoices/{?orderNumber,orderVariableSymbol,applicationId,billingDate}]

### Invoices [GET]
Get invoice info

Generates billing information to be included in invoice for specific date for specific order or delivery.
This should be used by partner before issuing an invoice, to include correct billing information.

+ Parameters
    + orderNumber (string, optional)

        Order number.

    + orderVariableSymbol (string, optional)

        Variable symbol.

    + applicationId (string, optional)

        Application identifier.

    + billingDate (string, optional)

        Date of issuing an invoice. Default value: today.


+ Response 200 (application/json)

        Invoice info.

    + Attributes (InvoiceInfo)


+ Response 404 

        Application was not found.

    + Attributes (Errors)



## Orders [/orders/{?orderNumber,orderVariableSymbol,applicationId}]

### Orders [GET]
Get order

Search for order using specified parameters.

Parameters include variable symbol, order number or application number

+ Parameters
    + orderNumber (string, optional)

        Order number

    + orderVariableSymbol (string, optional)

        Order variable symbol

    + applicationId (string, optional)

        Application ID.


+ Response 200 (application/json)

        Order data.

    + Attributes (Order)


+ Response 404 

        Order not found.

    + Attributes (Errors)




# Group Offers operations

## Installment Programs Down Payments [/installment-programs-down-payments/]

### InstallmentProgramsDownPayments [POST]
Calculate installment programs down payments according to specified input

+ Request (application/json)
    + Attributes (InstallmentProgramsDownPaymentsRequest)


+ Response 200 (application/json)

        Down payments information. Minimal, maximal and steps between.

    + Attributes (InstallmentProgramsDownPayments)



## Installment Programs Offers [/installment-programs-offers/]

### InstallmentProgramsOffers [POST]
Calculate installment programs offer according to specified input

feature | supported by resource
--- | ---
[paging](#header-paging) | no
[sorting](#header-sorting) | no
[filtering](#header-filtering) | no

+ Request (application/json)
    + Attributes (array[InstallmentProgramsOffersRequest])


+ Response 200 (application/json)

        Installment programs collection

    + Attributes (array[InstallmentProgram], fixed-type, required)



## Installment Programs [/installment-programs/]

### InstallmentPrograms [POST]
Calculate installment program detailed information.

It returns the installment program that most closely matches specified input.

+ Request (application/json)
    + Attributes (InstallmentProgramsRequest)


+ Response 200 (application/json)

        Detailed information about installment program.

    + Attributes (InstallmentProgram)


+ Response 422

        No installment program was found.
    
    + Attributes (Errors)


# Group Prescoring operations

## Customer Information [/customer-information/{?emailHash,phoneHash,firstNameHash,lastNameHash}]

### CustomerInformation [GET]
Get customer's information according to input

+ Parameters
    + emailHash (string, optional)

        E-mail zahashovaný pomocí SHA-256.
        
        
        
        Nejprve je třeba v e-mailové adrese převést všechny znaky na malé a poté zahashovat.

    + phoneHash (string, optional)

        Telefonní číslo zahashované pomocí SHA-256.
        
        
        
        Nejprve je třeba telefonní číslo převést do mezinárodního formátu +XXXYYYZZZZZZ a poté zahashovat.

    + firstNameHash (string, optional)

        Křestní jméno zahashované pomocí SHA-256.
        
        
        
        Nejprve je třeba odstranit diakritiku, převést všechny písmena na malé. Poté je třeba odstranit všechny bílé znaky před samotným jménem a po samotném jménu. Pokud je jméno víceslovné, je třeba, aby jednotlivá slova měla mezi sebou pouze jednu mezeru. Nakonec zahashovat.

    + lastNameHash (string, optional)

        Příjmení zahashované pomocí SHA-256.
        
        
        
        Nejprve je třeba odstranit diakritiku, převést všechny písmena na malé. Poté je třeba odstranit všechny bílé znaky před samotným jménem a po samotném jménu. Pokud je příjmení víceslovné, je třeba aby jednotlivá slova měla mezi sebou pouze jednu mezeru. Nakonec zahashovat.


+ Response 200 (application/json)

        Customer data

    + Attributes (Customer)


+ Response 404 

        Customer was not found
    
    + Attributes (Errors)


## Customer Limit Information [/customer-limit-information/{?emailHash,phoneHash,firstNameHash,lastNameHash}]

### CustomerLimitInformation [GET]
Get customer's limit information

+ Parameters
    + emailHash (string, optional)

        E-mail zahashovaný pomocí SHA-256.
        
        
        
        Nejprve je třeba v e-mailové adrese převést všechny znaky na malé a poté zahashovat.

    + phoneHash (string, optional)

        Telefonní číslo zahashované pomocí SHA-256.
        
        
        
        Nejprve je třeba telefonní číslo převést do mezinárodního formátu +XXXYYYZZZZZZ a poté zahashovat.

    + firstNameHash (string, optional)

        Křestní jméno zahashované pomocí SHA-256.
        
        
        
        Nejprve je třeba odstranit diakritiku, převést všechny písmena na malé. Poté je třeba odstranit všechny bílé znaky před samotným jménem a po samotném jménu. Pokud je jméno víceslovné, je třeba, aby jednotlivá slova měla mezi sebou pouze jednu mezeru. Nakonec zahashovat.

    + lastNameHash (string, optional)

        Příjmení zahashované pomocí SHA-256.
        
        
        
        Nejprve je třeba odstranit diakritiku, převést všechny písmena na malé. Poté je třeba odstranit všechny bílé znaky před samotným jménem a po samotném jménu. Pokud je příjmení víceslovné, je třeba aby jednotlivá slova měla mezi sebou pouze jednu mezeru. Nakonec zahashovat.


+ Response 200 (application/json)

        Limits of customer

    + Attributes (Limits)


+ Response 404 

        Customer was not found.

    + Attributes (Errors)



## Prescore [/prescore/]

### Prescore [POST]
Prescores application

Returns probability of application's approval and limits of customer, if known to HC

+ Request (application/json)
    + Attributes (PrescoreRequest)


+ Response 200 (application/json)

        Probability of approval

    + Attributes (PrescoreResult)




# Group Merchantsite operations
This set of APIs is NOT exposed from HC. Instead, it should be developed by partner and accept calls specified below.

## OrderChangeRequest [/{application.merchantUrls.changeEndpoint}/orderChangeRequest{?applicationId,orderNumber,type}]

+ Parameters
    + application.merchantUrls.changeEndpoint (string, required)


### OrderChangeRequest [POST]
Order change request

Žádá partnera o opravu dat objednávky (např. fakturačních údajů, položek objednávky...).

+ Parameters
    + applicationId (string, optional)

        Identifikátor žádosti o financování.

    + orderNumber (string, optional)

        Číslo objednávky.

    + type (string, optional)

        Typ změny. Možné typy:
        
        
        
        personalInfo - změna osobních údajů
        
        
        
        orderItems - změna položek objednávky
        
        
        
        ... případně další změny


+ Request (application/json)
    + Attributes (Order)


+ Response 200 
    Request processed successfully.



+ Response 400 

        Can not process changes





## ApplicationNotification [/{application.merchantUrls.notificationEndpoint}/applicationNotification{?applicationId,type}]

+ Parameters
    + application.merchantUrls.notificationEndpoint (string, required)


### ApplicationNotification [POST]
Notify partner about changes in application.

+ Parameters
    + applicationId (string, optional)

        Identifikátor žádosti o financování.

    + type (string, optional)

        Typ notifikace. Možné typ:
        
        
        
        approved - schváleno ze strany HC
        
        
        
        rejected - zamítnuto ze strany HC
        
        
        
        cancelled - zrušeno na žádost zákazníka
        
        
        
        ... případně další stavy


+ Request (application/json)
    + Attributes (Application)


+ Response 200 
    Notification successfully processed.

    + Body



## PaymentNotification [/{application.merchantUrls.paymentEndpoint}/paymentNotification{?applicationId}]

+ Parameters
    + application.merchantUrls.paymentEndpoint (string, required)


### PaymentNotification [POST]
Notification about new payment.

+ Parameters
    + applicationId (string, optional)

        Application identifier


+ Request (application/json)
    + Attributes (Payment)


+ Response 200 
    Notification successfully processed.
    
    + Body


# Data Structures

## DeliveryCarrier (object) 
Delivery carrier

### Properties
+ One Of
    + carrierId (enum, required)
        + CZ_POST_HAND - Czech Post, Parcel Delivery to Hand
        + CZ_POST_OFFICE - Czech Post, Parcel Delivery to Post Office
        + CZ_POST_OTHER - Czech Post, other service
        + PPL
        + DPD
        + GEIS
        + IN_TIME
        + TOP_TRANS
        + GEBRUDER_WEISS
        + LOCAL_COURIER
        + TNT
        + GLS
        + HDS_COMFORT
        + HDS_STANDARD

    + carrierCustom: `my custom carrier` (string, required) - for carriers not found in enumeration of customer ID, specify value as text

## PhoneNumber (object)
+ phoneType: `PRIMARY_MOBILE` (enum, required) - type of phone
    + `PRIMARY_MOBILE`
    + `SECONDARY_MOBILE`
    + `HOME_PHONE`
    + `EMPLOYMENT_PHONE`
+ countryCode: `+420` (string, optional) - country code, including leading `+`
+ number: `123456789` (string, required) - phone number

## Address (object)
Address.

### Properties
+ `name`: `John Doe` (string, optional) - name on address
+ `country`: `CZ` (string, optional)

    Country. 
    
    (see ISO 3166 alpha-2)

+ `city`: `Prague` (string, optional) - city.
+ `streetAddress`: `Letenská` (string, optional) - street/city part.
+ `streetNumber`: `22` (string, optional) - street number
+ `zip`: `140 00` (string, required) - postal code
+ `addressType` (enum, required) - type of the address. Only some of the types are allowed in each context.
    + `PERMANENT` - permanent residential address
    + `CONTACT` - contact address
    + `DELIVERY` - delivery address
    + `BILLING` - billing address


## Amount (object)
Financial amount

### Properties
+ `amount`: `125.90` (number, required)

    Amount in decimal format 
    

+ `currency`: `CZK` (string, required)

    Amount currency. ISO 4217

+ `formated`: `125,90 Kč` (string, optional)
    
    Formatted interpretation, localized.



## Application (object)
Financing application request

### Properties
+ `id`: `HCO-11200a0ee1` (string, required) - Unique identifier in HCO
+ `state` (enum, required) - Application state.
    + `VERIFICATION_CODE_NEEDED` - SMS code verification is required
    + `ADDITIONAL_DATA_NEEDED` - need additional data for further processing
    + `PROCESSING` - application is being processed
    + `APPROVED` - application was approved
    + `REJECTED` - application was rejected
    + `CANCELLED` - application was cancelled
+ `stateReason`: `rejected from previous history` (string, optional) - State transition reason; only applicable for some of the states, e.g. REJECTED - reason to reject
+ `customer` (Customer, required) - Customer data
+ `order` (Order, required) - Order data
+ `type` (enum, required) - Financing type. TODO
    + `POSTPONE` - "zaplať později"
    + `LOAN` - Rozklad
+ `preferredMonths`: 10 (number, optional) - Preferred number of installments (in months).
+ `preferredInstallmentAmount` (Amount, optional) - Preferred repayment amount.
+ `preferredDownPaymentAmount` (Amount, optional) - Preferred downpayment amount.
+ `subscriptionFlag` (boolean, optional) - Flag indicating repeated payment
    + Default: false
    
+ `subscriptionPaymentFrequency` (string, optional) - payment frequency for repeated payment
+ `subscriptionPaymentFirstDate`: `2016-10-12` (string, optional) - first payment date for repeated payment
+ `agreementPersonalDataProcessing`: `true` (boolean, required) - flag indicating already approved personal data processing
+ `agreementTermsAndConditions`: `true` (boolean, optional) - flag indicating already approved terms and conditions
+ `productCode`: `a122ax` (string, optional) - Product code, this indicates previous calculation result
+ `productSetCode`: `bc11523` (string, optional) - Product set code, this will limit further calculations


## Customer (object)
Customer data

### Properties
+ `fullName`: `Ing. John Newborn, Csc.` (string, optional) - Customer full name, including academical degrees and salutation.
+ `firstName`: `John` (string, optional) - Křestní jméno zákazníka.
+ `lastName`: `Newborn` (string, optional) - Příjmení zákazníka.
+ `honourBeforeName`: `Ing.` (string, optional) - academical degree, in front of the name
+ `honourAfterName`: `CSc.` (string, optional) - academical degree, behind name
+ `email`: `john.newborn@country.com` (string, required) - E-mail address of customer
+ `phoneNumber` (array[PhoneNumber], required) - phone numbers
+ `addresses` (array[Address], optional) - addresses. Only `PERMANENT` and `CONTACT` types are allowed.
+ `tin`: `12333321` (string, optional) - tax identification number (ICO)
+ `vatin`: `CZ8402154456` (string, optional) - VAT identification number
+ `extraData` (ExtraData, optional) - additional data, that may improve the approval probability


## ExtraData (object)


### Properties
+ `transactionsNumber`: 10 (number, optional) - Historický počet hotovostních transakcí zákazníka v e-shopu partnera.
+ `cashlessTransactionsNumber`: 5 (number, optional) - Historický počet bezhotovostních transakcí zákazníka v e-shopu partnera.
+ `transactionsAmount` (Amount, optional) - Součet cen všech hotovostních transakcí zákazníka v e-shopu partnera.
+ `cashlessTransactionsAmount` (Amount, optional) - Součet cen všech bezhotovostních transakcí zákazníka v e-shopu partnera.
+ `latestTransactionDate`: `2017-01-10` (string, optional) - newest transaction date on partner e-shop.
+ `earliestTransactionDate`: `2015-10-12` (string, optional) - oldest transaction date on partner e-shop
+ `pageTotalTime`: 250 (number, optional) - Celková doba strávená na stránce partnera ve vteřinách.
+ `pageReviewsTime`: 100 (number, optional) - Doba strávená na stránkách s recenzemi a komentáři zboží ve vteřinách.
+ `cartItemsRemoved`: 2 (number, optional) - Celkový počet odstraněných položek v košíku v rámci aktuálního nákupu.
+ `itemsViewed`: 10 (number, optional) - Počet zobrazených stránek s produkty.


## OrderItemsChangeRequest (object)
Object used to change order.

### Properties
+ `orderItems` (array[OrderItem], optional) - Seznam zboží, které se mění. Pokud není vyplněno, změna se týká všeho zboží objednávky..
+ `invoice` (Document, optional) - Přiložený soubor (faktura, proforma faktura, dobropis ...).
+ `variableSymbol`: `122a111` (string, optional) - Variabilní symbol nově vystaveného dokumentu (faktury, proforma faktury, dobropisu...).
+ `sendDate`: `2017-01-12` (string, optional) - Datum a čas odeslání.
+ `deliveryCarrier` (DeliveryCarrier, optional) - Dopravce. Číselník dopravců. 
+ `deliveryDate`: `2017-01-15` (string, optional) - Datum a čas doručení.
+ `deliveryTrackingNumber`: `EEX1221` (string, optional) - Číslo pro sledování zásilky.
+ `totalAmount` (Amount, optional) - Celková cena za všechny kusy zboží v poli orderItems i s DPH. Povinné pokud vznikla faktura (přiložená v invoice).
+ `totalTaxAmount` (Amount, optional) - Nová celková hodnota DPH za všechny kusy zboží poli v orderItems. Povinné pokud vznikla faktura (přiložená v invoice).


## ApplicationRequestOrder (object)
Order information, needed to create an application.

### Properties
+ `number`: `AA234` (string, required) - order number (internal for e-shop)
+ `variableSymbols` (array[string], optional) - variable symbols (internal for e-shop)
+ `totalAmount` (Amount, required) - total order amount, including VAT
+ `totalTaxAmount` (Amount, required) - total VAT amount
+ `addresses` (array[Address], required) - addresses. Only `BILLING` and `DELIVERY` types are allowed.
+ `deliveryType` (enum, optional) - delivery type, for `DELIVERY_CARRIER` type can be further specified by DeliveryCarrier attribute.Typ doručení. Dopravcem, osobní převzetí, online doručení atd.
    + `PERSONAL_BRANCH` - personal collection at branch
    + `PERSONAL_PARTNER` - personal collection at partner network
    + `ONLINE` - online delivery (e.g. for intangible assets)
+ `deliveryCarrier` (DeliveryCarrier, optional) - delivery carrier, when applicable.
+ `reservationDate`: `2017-01-20` (string, optional)

   Date and time until order is reserved. 

   After this date, e-shop does not guarantee items availability (if application processing is longer, it may endanger order fullfillment).
    
+ `items` (array[OrderItem], required) - order items
+ `documents` (array[Document], optional) - attached documents (invoices etc.)


## Order (ApplicationRequestOrder)
Order information.

### Properties
+ `deliveryDate`: `2017-01-17` (string, optional) - date and time of delivery
+ `deliveryTrackingNumber`: `EX12221` (string, optional) - delivery tracking number
+ `sentDate`: `2017-01-12` (string, optional) - date and time of order shipping


## OrderItem (object)
Item on order

### Properties
+ `type` (enum, optional) - item type
    + PHYSICAL
    + DISCOUNT 
    + `SHIPPING_FEE`
    + `SALES_TAX`
    + DIGITAL
    + `GIFT_CARD`
    + `STORE_CREDIT`
    + `FEE`

+ `code`: `EXC4677-1a` (string, optional) - internal code for item (internal to e-shop). Used to better identify the item for future changes
+ `ean`: 888462064002 (string, optional) - EAN code.
+ `name`: `iPhone 6s 32GB SpaceGray` (string, required) - item name
+ `variant`: `32GB SpaceGray` (string, optional) - item variant
+ `description`: `Mobile phone with 32GB of RAM` (string, optional)
+ `producer`: `Apple` (string, optional)
+ `categories` (array[string], optional) - item categories
    + `mobile phones`
    + `iPhone`
+ `quantity`: 1 (number, optional) - item quantity
+ `unitPriceAmount` (Amount, optional) - price per one piece
+ `totalAmount` (Amount, required) - total price for all pieces, VAT inclusive
+ `totalTaxAmount` (Amount, required) - total VAT amount for all pieces
+ `image` (File7, optional) - item image
+ `productURL`: `https://www.example.com?itemId=10` (string, optional) - URL of the item in e-shop
+ `sendDate`: `2017-01-10` (string, optional) - date when item was sent. Only when the whole order was NOT sent at once.
+ `deliveryDate`: `2017-01-12` (string, optional) - date when item was delivered. Only when the whole order was NOT sent at once.
+ `deliveryTrackingNumber: `EX21121` (string, optional) - Tracking number for the item. Only when the whole order was NOT sent at once.


## File7 (object)


### Properties
+ `filename` (string, optional) - Název souboru.
+ `content` (string, optional)

    Obsah souboru. Nepovinné, pokud je zadán url.
    
    
    
    Base64, maximální velikost 500kB.

+ `url` (string, optional) - URL souboru. Nepovinné, pokud je zadán file.


## Document (object)
Přiložený soubor objednávky (faktura, proforma faktura, dobropis...).

### Properties
+ `type` (string, required)

    Faktura, proforma faktura, dobropis...
    
    
    
    invoice - faktura
    
    
    
    proformaInvoice - proforma faktura
    
    
    
    creditNote - dobropis
    
    
    
    other - ostatní

+ `file` (File7, required) - Soubor.
+ `description` (string, optional) - Popis souboru.
+ `extraData` (ExtraData9, optional) - Případná data z dokumentu.


## ExtraData9 (object)


### Properties
+ `variableSymbol` (string, optional) - Variabilní symbol (interní v e-shopu).


## InvoiceInfo (object)
Údaje, které mají být uvedeny na faktuře.

### Properties
+ `fullName` (string, required) - customer full name, including academical degrees and salutation (Mr./Mrs./..)
+ `address` (Address, required) - Adresa. Only `BILLING` address type is allowed.
+ `dueDate` (string, optional) - Invoice due date. If not specified, default value will be used by partner.


## InstallmentProgram (object)
Installment programs

### Properties
+ `type` (enum, optional) - program type
    + MINIMAL - lowest installment
    + FAVOURITE - recommended (favourite) installment program
    + OTHER
+ `installmentAmount` (Amount, optional) - monthly installment amount
+ `numberOfInstallments`: 10 (number, optional) - installment count
+ `detail` (Detail, optional)

    Calculation detailed information.

    Only available for calculations received by calling `POST /installment-programs`
    
    Not available for  "POST /installment-programs-offers/" 



## Detail (object)


### Properties
+ `installmentDay` (number, optional)

    Den splátky v měsíci.
    
    
    
    Například 20

+ `installmentFirstDate` (string, optional)

    Datum první splátky.
    
    
    
    Například 20. ledna 2017

+ `installmentLastDate` (string, optional)

    Datum poslednní splátky.
    
    
    
    Například 20. července 2017

+ `annualInterestRate` (string, optional)

    Roční úroková sazba.
    
    
    
    Například: 0.17

+ `predictedProvisionDate` (string, optional)

    Předpokládané datum poskytnutí úvěru.
    
    
    
    Například: 18. ledna 2017

+ `paidBackAmount` (Amount, optional) - Celková částka, kterou zákazník zaplatí.
+ `rpsn` (string, optional)

    RPSN
    
    
    
    Například: 0.23

+ `legalline` (string, optional)

    Textový popis nabídky.
    
    
    
    Například:
    
    "Uvedené hodnoty jsou spočítány k datu poskytnutí 18.1.2017, datu 1. splátky 20.1.2017 a se splatností všech dalších splátek k 20. dni v měsíci počítaje 20.1.2017. Nejedná se o nabídku či veřejnou nabídku. Platí při splnění podmínek Home Credit...."



## InstallmentProgramsDownPayments (object)
Informace o akontacích. Nejnižší možná, nejvyšší možná akontace a výše kroku mezi nimi.

### Properties
+ `minimumAmount` (Amount, optional)

    Nejnižší možná akontace.
    
    
    
    Např.: 0 Kč.

+ `maximumAmount` (Amount, optional)

    Nejvyšší možná akontace.
    
    
    
    Např.: 2 500 Kč.

+ `stepAmount` (Amount, optional)

    Výše kroku mezi nimi.
    
    
    
    Např.: 500 Kč.
    
    Možné akontace pak jsou:
    
    
    
    0 Kč, 500 Kč, 1000 Kč, 1500 Kč, 2000 Kč, 2500 Kč



## Limits (object)
Limity zákazníka.

### Properties
+ `availableLimit` (Amount, required) - Dostupný limit zákazníka.
+ `totalLimit` (Amount, required) - Celkový limit zákazníka.


## Payment (object)
Informace o proplacení.

### Properties
+ `paymentId` (string, required) - payment identifier
+ `date` (string, required) - payment date.
+ `applicationId` (string, required) - application ID, that this payment belongs to
+ `amount` (Amount, required) - payment amount
+ `invoice` (InvoiceInfo, required) - invoice data.


## MerchantURLs (object)
Kolekce URL adres pro notifikace a návrat k partnerovi (approved, rejected, notify, change...).

### Properties
+ `approvedRedirect` (string, required) - URL partnera, kam bude zákazník přesměrován po schválení žádosti na bráně HCO.
+ `rejectedRedirect` (string, required) - URL partnera, kam bude zákazník přesměrován po zamítnutí žádosti na bráně HCO.
+ `notificationEndpoint` (string, required) - URL partnera, kde bude notifikován o změnách žádosti (schválení, zamítnutí, stornování...).
+ `paymentsEndpoint` (string, optional) - URL partnera, kde bude notifikován o provedení plateb z žádosti.


## ApplicationRequest (object)
Žádost o financování.

### Properties
+ `customer` (Customer, required) - Data zákazníka.
+ `order` (ApplicationRequestOrder, required) - Data objednávky.
+ `type` (string, required)

    Typ financování.
    
    Rozklad, "zaplať později", "zaplať až po vyzkoušení".

+ `preferredMonths` (number, optional) - Preferovaný počet splátek (v měsících).
+ `preferredInstallmentAmount` (Amount, optional) - Preferovaná výše měsíční splátky.
+ `preferredDownPaymentAmount` (Amount, optional) - Preferovaná výše akontace.
+ `subscriptionFlag` (boolean, optional)

    Příznak, zda se jedná o opakovanou platbu.
    
    
    
    Výchozí hodnota - false.

+ `subscriptionPaymentFrequency` (string, optional) - Jedná-li se o opakovanou platbu,  frekvence platby (měsíční, týdenní, ...).
+ `subscriptionPaymentFirstDate` (string, optional) - Jedná-li se o opakovanou platbu,  datum první platby.
+ `agreementPersonalDataProcessing` (boolean, required) - Příznak, zda zákazník souhlasí se zpracováním osobních údajů již u partnera.
+ `agreementTermsAndConditions` (boolean, optional) - Příznak, zda zákazník souhlasí s obchodními podmínkami již u partnera.
+ `productCode` (string, optional) - Kód produktu splátkového programu. Konkrétní identifikátor kalkulace.
+ `productSetCode` (string, optional) - Kód produktové sady splátkového programu. Omezení budoucí kalkulace.
+ `merchantURLs` (MerchantURLs, optional) - Kolekce URL adres pro notifikace a návrat k partnerovi (approved, rejected, notify, change...).



## ApplicationRequestResult (object)
Odpověď na žádost o financování.

### Properties
+ `id` (string, required) - Unikátní identifikátor žádosti v rámci HCO.
+ `state` (string, required) - Stav žádosti.
+ `gatewayRedirectURL` (string, required) - URL adresa brány.


## AdditionalDataRequest (object)
Dodatečná data o zákazníkovi.

### Properties
+ `personalId` (string, optional) - Rodné číslo. Ve formátu XXXXXX/YYYY.
+ `idCard` (string, optional) - Číslo občanského průkazu.
+ `idCardExpiryDate` (string, optional) - Datum platnosti občanského průkazu.
+ `idCardScan` (IdCardScan, optional) - Sken občanského průkazu.


## IdCardScan (object)


### Properties
+ `front` (File7, optional) - Přední strana.
+ `back` (File7, optional) - Zadní strana.


## InstallmentProgramsRequest (object)


### Properties
+ `productCode` (string, required) - Kód produktu splátkového programu. Konkrétní identifikátor kalkulace.
+ `amount` (Amount, required) - Cena zboží.
+ `downPaymentAmount` (Amount, optional) - Výše akontace. Výchozí hodnota 0.


## InstallmentProgramsOffersRequest (object)


### Properties
+ `productSetCode` (string, required) - Kód produktové sady splátkového programu. Omezení kalkulací.
+ `amount` (Amount, required) - Cena zboží.
+ `downPaymentAmount` (Amount, optional) - Výše akontace. Výchozí hodnota 0.


## InstallmentProgramsDownPaymentsRequest (object)


### Properties
+ `productSetCode` (string, required) - Kód produktové sady splátkového programu. Omezení kalkulací.
+ `amount` (Amount, required) - Cena zboží.


## PrescoreRequest (object)
Data pro prescoring. 

Obdobná struktura jako Application.

### Properties
+ `customer` (Customer, optional) - Data zákazníka.
+ `order` (Order, optional) - Data objednávky.
+ `fingerprintComponents` (array[string], optional) - Komponenty fingerprintu.
+ `ipAddress` (string, optional) - IPv4 nebo IPv6 adresa zákazníka.
+ `agreementPersonalDataProcessing` (string, optional) - Příznak, zda zákazník souhlasí se zpracováním osobních údajů již u partnera.
+ `productType` (string, optional)

    Typ financování.
    
    Rozklad, "zaplať později", "zaplať až po vyzkoušení".

+ `preferredMonths` (number, optional) - Preferovaný počet splátek (v měsících).
+ `preferredInstallmentAmount` (Amount, optional) - Preferovaná výše měsíční splátky.
+ `preferredDownPaymentAmount` (Amount, optional) - Preferovaná výše akontace.
+ `subscriptionFlag` (boolean, optional)

    Příznak, zda se jedná o opakovanou platbu.
    
    
    
    Výchozí hodnota - false.

+ `subscriptionPaymentFrequency` (string, optional) - Jedná-li se o opakovanou platbu,  frekvence platby (měsíční, týdenní, ...).
+ `subscriptionPaymentFirstDate` (string, optional) - Jedná-li se o opakovanou platbu,  datum první platby.


## PrescoreResult (object)
Výsledek prescoringu.

### Properties
+ `recommendation` (boolean, required)

    Doporučení, zda objednávku předat do služby. 
    
    
    
    true = Žádost bude pravděpodobně schválena.
    
    
    
    false = Žádost nebude pravděpodobně schválena.

+ `probabilityOfApproval` (number, required)

    Pravděpodobnost schválení objednávky v intervalu <0, 1>. 
    
    
    
    0 = 0% šance na schválení
    
    
    
    1 = 100% šance na schválení
    
    
    
    Partner (e-shop) může vytvořit vlastní logiku a neřídit se podle doporučení (být přísnější, nebo naopak být benevolentnější).

+ `code` (string, required)

    Kód výsledku prescoringu. Možné hodnoty:
    
    
    
    ok
    
    
    
    additionalDataSecurity -
    
    Zákazník bude doptán na další osobní údaje z důvodu bezpečnosti.
    
    
    
    additionalDataLimit -
    
    Zákazníka známe, ale nemá dostatečný limit. Zákazník bude doptán na další osobní údaje z důvodu navýšení limitu (má nedostatečný).
    
    
    
    insufficientLimit -
    
    Zákazníka známe, ale nemá dostatečný limit a není možnost si ho navýšit.
    
    
    
    insufficientLimitOpportunity -
    
    Zákazníka známe, ale nemá dostatečný limit. Existuje ale možnost si ho navýšit zaplacením aktuálních objednávek.
    
    
    
    detailsNotMatching -
    
    Zákazníka známe, ale nesedí údaje. Zákazník bude vyzván k opravě dat.

+ `customerType` (string, required)

    Typ zákazníka. Možné hodnoty:
    
    
    
    unknown -
    
    Zákazníka neznáme.
    
    
    
    firstOrder -
    
    Zákazníka známe, ale zatím nezaplatil první objednávku.
    
    
    
    full -
    
    Zákazníka známe a již zaplatil alespoň jednu objednávku.
    
    
    
    blocked -
    
    Zákazníka známe. Je zablokován.

+ `message` (string, optional)

    Zpráva pro zákazníka.
    
    
    
    Např.: 
    
    “V HCO peněžence nemáte dostatečný limit.”
    
    
    
    “Uveďte do objednávky jméno a příjmení, které používáte ve službě HCO.”
    
    
    
    a další...

+ `additionalData` (array[string], optional)

    Seznam dodatečných informací, na které bude zákazník doptán.
    
    
    
    Možné hodnoty:
    
    personalId,
    
    idCard,
    
    idCardExpiryDate,
    
    idCardScan

+ `limits` (Limits, optional)

    Limity zákazníka. 
    
    Pokud zákazníka neznáme, jsou výše limitů odhadnuty.
    
    Pokud zákazníka známe, jedná se o aktuální limity.
    
    
    
    Pokud zákazník dal souhlas o předávání limitů. TODO legal.



## Error (object)
+ code: `ERR_1000_SOME_ERROR_CODE` (string, required) - unique internal error code
+ message: `Some error/validation message description` (string, required) - human readable error description (non-localized)
+ severity (enum, required)
    + ERROR - critical error, execution cannot continue. This MUST be indicated also by appropriate HTTP status code
    + WARN - non-critical error, execution can continue but further user interaction is advisable. This MIGHT be indicated also by appropriate HTTP status code
    + INFO - information only, execution can continue without user interaction
+ attribute: `personalBirthNumber` (string, optional) - json path of request attribute that caused the error (if applicable)    
+ ticketId: `UAT1:AMS:20160516-091658.450:45e4` (string, optional) - internal ticket ID, used for error backtracking

## Errors (object)
+ errors: (array[Error], fixed-type, required)

## PagingInfo (object)
+ itemsPerPage: 10 (number, required) - number of items per page
+ nextPage: `transactions?sort=category&limit=10&after=25` (string, optional) - request to retrieve next page, if it exists and can be unambiguously specified
+ prevPage: `transactions?sort=category&limit=10&before=25` (string, optional) - request to retrieve previous page, if it exists and can be unambiguously specified