FORMAT: 1A
HOST: http://example.com/api

# HC OneClick API
API documentation for Home Credit One-Click API.

## Naming conventions
- we use camelCase for all object and attribute names
- we use CAPITAL_UNDERSCORE for enum values
- we use plural in resource names

## Paging
- some resources (stated in documentation) that return collection of objects support pagination. We are using technique known as 'cursor-based pagination'.
- on request:
  - query parameter `limit` specifies maximum number of objects in returned collection
  - query parameter `after` specifies last object retrieved in previous request. Its value is usually `id` of last object retrieved in previous call, but this will be stated in documentation. Parameter `after` is used when traversing collection forwards.
  - query parameter `before` specifies first object retrieved in previous request (analogy to `after` parameter), and is used when traversing collection backwards.
  - if `before` and `after` are omitted, beginning of collection is returned, using specified sort order
  - items in collection are always sorted accoridng to attribute which could be passed in after/before parameters. Even if you specify different sorting order, this attribute will be last sorting criterion; if you do not specify sorting order, result collection will be sorted according to this attribute.
- on response:
  - `pagingInfo` object is returned as part of response body with following attributes:
    - _nextPage_ - request to retrieve next page. Either nextPage or previousPage is returned, depending whether you specify `after` or `before` parameter. If you specify neither `before` nor `after` parameter, these attributes will be omitted from response. 
    - _prevPage_ - request to retrieve previous page (see `nextPage` attribute description above).
    - _itemsPerPage_ - number of items per page


Example request:
```
curl -X GET https://api.homecredit.eu/customer/v1/my/contracts?sort=category&limit=10&after=15
```

Example response pagingInfo:

```javascript
"pagingInfo": {
    "nextPage": "/my/contracts?sort=category&limit=10&after=25"
    "itemsPerPage": 10,
}
```

## Sorting
- some resources (stated in documentation) supports result sorting. You can specify sorting attributes and order using `sort` request parameter. For ascending order, specify just attribute name; for descending order, add unary - in front of attribute name. You can specify multiple attributes for sorting, separated by comma.
- each resource that supports sorting specifies list of attributes that can be used for sorting.

Examples:
- `/public/fxrates?sort=currencyCode` - get list of FX rates sorted by attribute currencyCode
- `/public/branches?sort=-name` - get list of branches, sorted by attribute name in descending order
- `/banking/accounts?sort=accountType,-accountCurrency,accountName` - get list of accounts, sorted by type (ascending), then by currency descending and then by account name (ascending)


## Filtering
Some resources (stated in documentation) supports results filtering. Such resources have list of filters specified together with possible operations and possible values.

You can specify filtering by passing `filter` attribute. General pattern to specify filter is:

`<filterName>|<operator>|<values>`

- `filterName` - filter name from documentation
- `operator` - operator, specified in resource documentation
- `values` - one or more values for filter. Multiple values are separated by comma

Multiple filters can be specified on each request, separated by semi-colon. They are joined by "AND", so each result item must satisfy all conditions.

### Filtering examples

- get a list of partners with category in (1, 5, 10)
```
GET /general/partners?filter=category|in|1,5,10
```

- get a list of contracts with contractDate in (2016-02-10, 2016-04-28>
```
GET /general/contracts?filter=contractDate|gt|2016-02-10;contractDate|lteq|2016-04-28
```

### List of operators
| operator | meaning |
| ---      | ---     |
| lt       | less than |
| lteq       | less than or equals |
| eq       | equals    |
| gteq       | greater than or equals    |
| gt       | greater than |
| in       | value in list |

## API calls limits
When you reach API calls limit (you call our API more times than is your quota), you receive HTTP error 429. To inform you about limits we use following response headers:
- `X-Rate-Limit-Limit` - The number of allowed requests in the current period
- `X-Rate-Limit-Remaining` - The number of remaining requests in the current period
- `X-Rate-Limit-Reset` - The number of seconds left in the current period

## Response encoding
Unless stated otherwise, all responses are sent as `Content-Type: application/json; charset=utf-8`

## HTTP status codes
We use following status codes throughout the API, except for OAuth flow when response codes are prescribed in RFC
- 200 `OK` - request was successful
- 201 `Created` - request was successfull and resource was created
- 204 `No content` - we accepted your request but there is nothing to return (e.g. response is empty)
- 400 `Bad Request` - syntax error, e.g. request is missing required parameters/attributes or parameter values are of incorrect type
- 401 `Unauthorized` - your API key is wrong or user not authorized (not logged in)
- 403 `Forbidden` - access denied (e.g. user / application is not allowed to use the resource)
- 404 `Not Found` - resource could not be found
- 405 `Method Not Allowed` - specified method is not allowed for resource
- 422 `Unprocessable Entity` -  business (semantic) errors. Request is well-formed, but cannot be processed (e.g. payment due date is in past). Errors are specified in response body (see below)
- 429 `Too Many Requests` - you exceeded the rate limit (see section "API calls limit" above)
- 500 `Internal Server Error` - something went wrong on our side
- 503 `Service Unavailable` - there is planned service outage 

## Error handling
Besides HTTP status codes, which are the main indication if something goes wrong, we also use `errors` object to report more details about errors.

Errors object example:
```javascript
{
    ...

    errors: [
        {
            "code": "ERR_100",
            "message": "Invalid contract number",
            "severity": "ERROR",
            "attribute": "partyAccount.accountNumber",          // optional
            "ticketId": "UAT1:AMS:20160516-091658.450:45e4" // optional
        },
        {
            "code": 352,
            "message": "Insufficiend funds for payment order realization",
            "severity": "WARN"
        },
        {
            "code": 523,
            "message": "This order will trigger currency exchange operation",
            "severity": "INFO"
        }
    ]
}
```

Error object attributes
| attribute name | description |
| --- | --- |
| code | unique error code |
| message | human readable error description (non-localized) |
| severity | error severity (see below) |
| attribute | json path of request attribute that caused the error (optional) |
| ticketId | internal ticket ID, used for error backtracking |

There are 3 levels of error severity:

- ERROR - critical error, execution cannot continue. This MUST be indicated also by appropriate HTTP status code (`422 Unprocessable Entity`)
- WARN - non-critical error, execution can continue but further user interaction is advisable (for request to proceed, you MUST specify this error code in `override` request attribute). This MIGHT be indicated also by appropriate HTTP status code.
- INFO - information only, execution can continue without user interaction.

## Formats
- **date** and **time** uses [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatting, e.g.:
  - date is represented as `YYYY-mm-dd`. Timezone is added when necessary.
  - time is represented as `Thh:mm:ss`. Timezone is added when necessary.
  - day of week is represented as number 1..7, with 1 being Monday
  - week no. 1 is the week with the year's first Thursday in it
- **phone numbers** uses international format starting with '+' and including country code
- **numbers format** number format is defined by [JSON standard](http://www.json.org), e.g. decimals are separated by `.`


## Documentation principles
- attributes in request/response object are optional, unless stated otherwise (`required` flag under attribute name)
- required attribute in optional object means, that if optional object is specified, it must contain required attribute.
- all values in request/response attributes are just examples, except for enum values - these are the only possible values for given attribute.

# Group Application operations

## Create Application [/applications/]

### Create Application [POST]
Create new funding application

+ Request (application/json; charset=utf-8)
    + Attributes (ApplicationRequest)


+ Response 200(application/json; charset=utf-8)

        Application was created

    + Attributes (ApplicationRequestResult)


+ Response 400(application/json; charset=utf-8)

        There was an error processing request
        
    + Attributes (Errors)    





## Application detail [/applications/{applicationId}]
Operations on specific application

+ Parameters
    + applicationId (string, required)


### Get Application Detail [GET]
Get specific application detail by ID

+ Response 200(application/json; charset=utf-8)

        Actual application data

    + Attributes (Application)


+ Response 404(application/json; charset=utf-8)

        Application does not exist
        
    + Attributes (Errors)


## Request Application OTP [/applications/{applicationId}/requestOTP]

+ Parameters
    + applicationId (string, required)


### Request Application OTP [POST]
Sends one time password to customer by SMS. This OTP is required to verify application. See 'Verify Application' method.

+ Request (application/json; charset=utf-8)
    + Attributes (number, required)
    


+ Response 200(application/json; charset=utf-8)

        SMS with OTP was send to customer's primary phone number.

    + Attributes (Application)


+ Response 422(application/json; charset=utf-8)

        SMS with OTP was NOT send to customer.

    + Attributes (Errors)



## Verify Application  [/applications/{applicationId}/verify]

+ Parameters
    + applicationId (string, required)


### Verify Application [POST]
Verify application with OTP sent to customer by SMS.

+ Request (application/json; charset=utf-8)
    + Attributes (number, required)
    


+ Response 200(application/json; charset=utf-8)

        Application was verified correctly.

    + Attributes (Application)


+ Response 422(application/json; charset=utf-8)

        Application was not verified.

    + Attributes (Errors)
    


## Send Application Additional Data [/applications/{applicationId}/additionalData]

+ Parameters
    + applicationId (string, required)


### Send Application Additional Data [POST]
Send additional data needed to complete the application.

+ Request (application/json; charset=utf-8)
    + Attributes (AdditionalDataRequest)


+ Response 200(application/json; charset=utf-8)

        Data was accepted

    + Attributes (Application)


+ Response 400(application/json; charset=utf-8)

        Error in processing request.

    + Attributes (Errors)



## Cancel Application [/applications/{applicationId}/cancel{?reason}]

+ Parameters
    + applicationId (string, required)


### Cancel Application [PUT]
Cancel application, or cancel recurring payment.

+ Parameters
    + reason (enum, required) - Reason of cancellation
        + `ORDER_CANCELLED_CUSTOMER` - customer cancelled the application
        + `ORDER_CANCELLED_ITEMS` - application was cancelled because some items were unavailable
        + `ORDER_CANCELLED_OTHER` - other reason
        + `TODO`
    
+ Response 200(application/json; charset=utf-8)

        Application was cancelled.
    

+ Attributes (Order)


+ Response 422(application/json; charset=utf-8)
    Application cannot be cancelled
    
    + Attributes (Errors)


## Change Application Order [/applications/{applicationId}/order{?reason}]

+ Parameters
    + applicationId (string, required)


### Change Application Order [PUT]
Change order. Used to change order items, total amount, billing details etc.

+ Parameters
    + reason (string, optional)

        Reason for change.


+ Request (application/json; charset=utf-8)
    + Attributes (Order)


+ Response 200(application/json; charset=utf-8)
        Order was changed

    + Attributes (Order)


+ Response 422(application/json; charset=utf-8)
    Order cannot be changed.
        
    + Attributes (Errors)    





## Mark order items as cancelled  [/applications/{applicationId}/order/cancel]

+ Parameters
    + applicationId (string, required)


### Mark order items as cancelled [PUT]
Mark order items as cancelled

System notification. Some or all of the order items were cancelled. Based on application type and partner setting, credit note may be issued.


+ Request (application/json; charset=utf-8)
    + Attributes (OrderItemsChangeRequest)


+ Response 200(application/json; charset=utf-8)
        Some order items or the whole order was cancelled
        

    + Attributes (Order)


+ Response 422(application/json; charset=utf-8)

        Cannot cancel order items.
        
    + Attributes (Errors)    





## Mark order items as delivered [/applications/{applicationId}/order/deliver]

+ Parameters
    + applicationId (string, required)


### Mark order items as delivered [PUT]
Mark order items as delivered.

System notification. Some or all order items were delivered to customer. 
Based on application type and partner setting, application payment may be processed.


+ Request (application/json; charset=utf-8)
    + Attributes (OrderItemsChangeRequest)


+ Response 200(application/json; charset=utf-8)
        Order items or whole order is marked as delivered.
        
    + Attributes (Order)


+ Response 422(application/json; charset=utf-8)
        Cannot process state change.
        
    + Attributes (Errors)




## Mark order items as returned [/applications/{applicationId}/order/return]

+ Parameters
    + applicationId (string, required)


### Mark order items as returned [PUT]
Mark order items as returned.

System notification. Some or all order items were returned by customer back to e-shop.
Based on application type and partner setting, credit note may be issued.


+ Request (application/json; charset=utf-8)
    + Attributes (OrderItemsChangeRequest)


+ Response 200(application/json; charset=utf-8)
        Order items or whole order is marked as returned.
        
    + Attributes (Order)


+ Response 422(application/json; charset=utf-8)
        Cannot process state change.
        
    + Attributes (Errors)



## Mark order items as sent [/applications/{applicationId}/order/send]

+ Parameters
    + applicationId (string, required)


### Mark order items as sent [PUT]
Mark order items as sent

System notification. Some or all order items were shipped to customer. 
Based on application type and partner setting, application payment may be processed.

+ Request (application/json; charset=utf-8)
    + Attributes (OrderItemsChangeRequest)


+ Response 200(application/json; charset=utf-8)
        Order items or whole order is marked as shipped.

    + Attributes (Order)


+ Response 422(application/json; charset=utf-8)
        Cannot process state change.
        
    + Attributes (Errors)




## Applications Payments  [/applications/{applicationId}/payments]

+ Parameters
    + applicationId (string, required)


### ApplicationsPaymentsByApplicationId [GET]
Get payments on specific application

List of realized payments from HC to partner. In case of recurring payment, list may contain more items.

feature | supported by resource
--- | ---
[paging](#header-paging) | yes
[sorting](#header-sorting) | no
[filtering](#header-filtering) | no

This resource supports [paging](#header-paging). As a value to `before` and `after` parameters, use `paymentId` attribute.

Collection is sorted by paymentId attribute.

+ Response 200(application/json; charset=utf-8)
        List of payments. May be empty if no payment was processed yet.
        
    + Attributes (array[Payment], fixed-type, required)
    


+ Response 404(application/json; charset=utf-8)

        Application does not exists
        
    + Attributes (Errors)



## Invoices [/invoices/]

### Generate invoice info [POST]
Generates invoice info

Generates billing information to be included in invoice for specific date for specific order or delivery.
This should be used by partner before issuing an invoice, to include correct billing information.

+ Request
    + Attributes (InvoiceInfoRequest)

+ Response 200(application/json; charset=utf-8)

        Invoice info.

    + Attributes (InvoiceInfo)


+ Response 404(application/json; charset=utf-8)

        Invoice info cannot be generated.

    + Attributes (Errors)



## Orders [/orders/{?orderNumber,orderVariableSymbol,applicationId}]

### Orders [GET]
Get order

Search for order using specified parameters.

Parameters include variable symbol, order number or application number

+ Parameters
    + orderNumber (string, optional)

        Order number

    + orderVariableSymbol (string, optional)

        Order variable symbol

    + applicationId (string, optional)

        Application ID.


+ Response 200(application/json; charset=utf-8)

        Order data.

    + Attributes (Order)


+ Response 404(application/json; charset=utf-8)

        Order not found.

    + Attributes (Errors)




# Group Offers operations

## Installment Programs Down Payments [/installment-programs-down-payments/]

### InstallmentProgramsDownPayments [POST]
Calculate installment programs down payments according to specified input

+ Request (application/json; charset=utf-8)
    + Attributes (InstallmentProgramsDownPaymentsRequest)


+ Response 200(application/json; charset=utf-8)

        Down payments information. Minimal, maximal and steps between.

    + Attributes (InstallmentProgramsDownPayments)



## Installment Programs Offers [/installment-programs-offers/]

### InstallmentProgramsOffers [POST]
Calculate installment programs offer according to specified input

feature | supported by resource
--- | ---
[paging](#header-paging) | no
[sorting](#header-sorting) | no
[filtering](#header-filtering) | no

+ Request (application/json; charset=utf-8)
    + Attributes (array[InstallmentProgramsOffersRequest])


+ Response 200(application/json; charset=utf-8)

        Installment programs collection

    + Attributes (array[InstallmentProgram], fixed-type, required)



## Installment Programs [/installment-programs/]

### InstallmentPrograms [POST]
Calculate installment program detailed information.

It returns the installment program that most closely matches specified input.

+ Request (application/json; charset=utf-8)
    + Attributes (InstallmentProgramsRequest)


+ Response 200(application/json; charset=utf-8)

        Detailed information about installment program.

    + Attributes (InstallmentProgram)


+ Response 422(application/json; charset=utf-8)

        No installment program was found.
    
    + Attributes (Errors)


# Group Precheck operations

## Customer Information [/customer-information/{?emailHash,phoneHash,firstNameHash,lastNameHash}]

### CustomerInformation [GET]
Get customer's information according to input

+ Parameters
    + emailHash (string, optional)
       
        E-mail hashed by SHA-256
        E-mail address has to be transformed to lowercase only before hashing.
        
    + phoneHash (string, optional)
        
        Phone number hashed by SHA-256
        Phone number has to be transformed to international format +XXXYYYZZZZZZ before hashing.

    + firstNameHash (string, optional)

        First name hashed by SHA-256.
        First name has to be transformed first (remove diacritics, all letters to lowercase, remove leading + trailing whitespace, only one space is permitted between particular names within multi-word first name) before hashing.
        
    + lastNameHash (string, optional)

        Last name hashed by SHA-256.
        Last name has to be transformed first (remove diacritics, all letters to lowercase, remove leading + trailing whitespace, only one space is permitted between particular names within multi-word last name) before hashing.


+ Response 200(application/json; charset=utf-8)

        Customer data

    + Attributes (Customer)


+ Response 404(application/json; charset=utf-8)

        Customer was not found
    
    + Attributes (Errors)

## Customer Limit Information [/customer-limit-information/{?emailHash,phoneHash,firstNameHash,lastNameHash}]

### CustomerLimitInformation [GET]
Get customer's limit information

+ Parameters
    + emailHash (string, optional)
       
        E-mail hashed by SHA-256
        E-mail address has to be transformed to lowercase only before hashing.
        
    + phoneHash (string, optional)
        
        Phone number hashed by SHA-256
        Phone number has to be transformed to international format +XXXYYYZZZZZZ before hashing.

    + firstNameHash (string, optional)

        First name hashed by SHA-256.
        First name has to be transformed first (remove diacritics, all letters to lowercase, remove leading + trailing whitespace, only one space is permitted between particular names within multi-word first name) before hashing.
        
    + lastNameHash (string, optional)

        Last name hashed by SHA-256.
        Last name has to be transformed first (remove diacritics, all letters to lowercase, remove leading + trailing whitespace, only one space is permitted between particular names within multi-word last name) before hashing.


+ Response 200(application/json; charset=utf-8)

        Limits of customer

    + Attributes (Limits)


+ Response 404(application/json; charset=utf-8)

        Customer was not found.

    + Attributes (Errors)



## Precheck [/precheck/]

### Precheck [POST]
Prechecks application

Returns probability of application's approval and limits of customer, if known to HC

+ Request (application/json; charset=utf-8)
    + Attributes (PrecheckRequest)


+ Response 200(application/json; charset=utf-8)

        Probability of approval

    + Attributes (PrecheckResults)




# Group Merchantsite operations
This set of APIs is NOT exposed from HC. Instead, it should be developed by partner and accept calls specified below.

## OrderChangeRequest [/{application.merchantUrls.changeEndpoint}/]

### OrderChangeRequest [POST]
Order change request

Asks partner to correct order data (billing information, order items etc.)

+ Request (application/json; charset=utf-8)
    + Attributes (OrderChangeRequest)

+ Response 200 (application/json; charset=utf-8)

        {
            "status": "OK"
        }

+ Response 400 (application/json; charset=utf-8)

        Can not process changes





## ApplicationNotification [/{application.merchantUrls.notificationEndpoint}/]

### ApplicationNotification [POST]
Notify partner about changes in application.

+ Request (application/json; charset=utf-8)
    + Attributes (Application)


+ Response 200 (application/json; charset=utf-8)

         {
            "status": "OK"
         }



## PaymentNotification [/{application.merchantUrls.paymentEndpoint}/]

### PaymentNotification [POST]
Notification about new payment.

+ Request (application/json; charset=utf-8)
    + Attributes (Payment)


+ Response 200 (application/json; charset=utf-8)

         {
            "status": "OK"
         }


# Data Structures

## DeliveryCarrier (object) 
Delivery carrier

### Properties
+ One Of
    + carrierId (enum, required)
        + CZ_POST_HAND - Czech Post, Parcel Delivery to Hand
        + CZ_POST_OFFICE - Czech Post, Parcel Delivery to Post Office
        + CZ_POST_OTHER - Czech Post, other service
        + PPL
        + DPD
        + GEIS
        + IN_TIME
        + TOP_TRANS
        + GEBRUDER_WEISS
        + LOCAL_COURIER
        + TNT
        + GLS
        + HDS_COMFORT
        + HDS_STANDARD

    + carrierCustom: `my custom carrier` (string, required) - for carriers not found in enumeration of customer ID, specify value as text

## PhoneNumber (object)
+ phoneType: `PRIMARY_MOBILE` (enum, required) - type of phone
    + `PRIMARY_MOBILE`
    + `SECONDARY_MOBILE`
    + `HOME_PHONE`
    + `EMPLOYMENT_PHONE`
+ countryCode: `+420` (string, optional) - country code, including leading `+`
+ number: `123456789` (string, required) - phone number

## Address (object)
Address.

### Properties
+ `name`: `John Doe` (string, optional) - name on address
+ `country`: `CZ` (string, required)

    Country. 
    
    (see ISO 3166 alpha-2)

+ `city`: `Prague` (string, required) - city.
+ `streetAddress`: `Letenská` (string, required) - street/city part.
+ `streetNumber`: `22` (string, required) - street number
+ `zip`: `140 00` (string, required) - postal code
+ `addressType` (enum, required) - type of the address. Only some of the types are allowed in each context.
    + `PERMANENT` - permanent residential address
    + `CONTACT` - contact address
    + `DELIVERY` - delivery address
    + `BILLING` - billing address


## Amount (object)
Financial amount

### Properties
+ `amount`: `125.90` (number, required)

    Amount in decimal format 
    

+ `currency`: `CZK` (string, required)

    Amount currency. ISO 4217

+ `formatted`: `125,90 Kč` (string, optional)
    
    Formatted interpretation, localized.

## VatAmount (Amount)
Financial amount with VAT rate.

### Properties
+ `vatRate`: `0.15` (number, required)

    VAT rate in decimal format 


## Application (object)
Financing application request

### Properties
+ `id`: `01-11200a0ee1` (string, required) - Unique identifier in HCO
+ `state` (enum, required) - Application state.
    + `PROCESSING` - application is being processed by HC
    + `READY` - application was approved and is ready for financing
    + `REJECTED` - application was rejected
    + `CANCELLED` - application was cancelled by client, either before approval or after delivery
+ `stateReason`: `PROCESSING_APPROVED` (enum, optional) - Describes internal state of application, e.g. when state is PROCESSING - reason why application remains in processing state
    + `PROCESSING_ADDITIONAL_DATA` - Additional data needed (redirect to HC or send Application additional data)
    + `PROCESSING_VERIFICATION` - Verification needed (redirect to HC or send Application verification)
    + `PROCESSING_REDIRECT_NEEDED` - Redirect to HC is needed. Redirect user to gatewayRedirectUrl.
    + `PROCESSING_NEW` - New application created
    + `PROCESSING_PREAPPROVED` - Preliminary approval by HC
    + `REJECTED` - Rejected by HC
    + `PROCESSING_APPROVED` - Approved by HC, to be signed by client
    + `PROCESSING_REVIEW` - Manual review by HC in progress
    + `PROCESSING_WAIT_CLIENT` - To be completed by client
    + `PROCESSING_ALT_OFFER` - Alternative offered to client
    + `PROCESSING_SIGNED` - Signed by client, to verification by HC
    + `CANCELLED_NOT_PAID` - Cancelled before delivery
    + `READY_TO_SHIP` - Financing approved, goods ready to be shipped to client
    + `READY_SHIPPED` - Goods shipped to client
    + `READY_DELIVERING` - Verification of goods delivery
    + `READY_DELIVERED` - Goods delivered to client
    + `READY_PAID` - Paid to merchant
    + `CANCELLED_TO_RETURN` - Cancelled after delivery, goods to be returned (not implemented)
    + `CANCELLED_RETURNED` - Cancelled after delivery, goods returned to merchant
+ `customer` (Customer, optional) - Customer data
+ `order` (Order, optional) - Order data 
+ `type` (enum, optional) - Financing type 
    + `DEFERRED_PAYMENT` - Pay later ("zaplať později")
    + `TRY_AND_PAY` - Customer pay after he tries the goods. ("vyzkoušej a zaplať")
    + `INSTALMENT` - Pay in monthly instalments ("nákup na splátky")
    + `SUBSCRIPTION` - Recurring payment ("předplatné, nebo opakovaná platba")
+ One Of
    - `settingsInstalment` - Settings for INSTALMENT Application type.
        + `preferredMonths`: 10 (number, optional) - Preferred number of installments (in months)
        + `preferredInstallment` (Amount, optional) - Preferred repayment amount
        + `preferredDownPayment` (Amount, optional) - Preferred downpayment amount
        + `productCode`: `a122ax` (string, optional) - Product code, this indicates previous calculation result
        + `productSetCode`: `bc11523` (string, optional) - Product set code, this will limit further calculations
    - `settingsSubscription` - Properties Settings for SUBSCRIPTION Application type.
        + `paymentFrequency` (enum, optional) - payment frequency for recurring payment
            + `WEEKLY` - Payment with weekly frequency. Repeated every week at the same day as set in subscriptionPaymentFirstDate.
            + `MONTHLY` - Payment with monthly frequency. Repeated every month at the same day as set in subscriptionPaymentFirstDate.
            + `QUARTERLY` - Payment with quarterly frequency. Repeated every 3 months at the same day as set in subscriptionPaymentFirstDate.
        + `paymentFirstDate`: `2016-10-12` (string, optional) - first payment date for recurring payment
+ `agreementPersonalDataProcessing`: `true` (boolean, optional) - flag indicating already approved personal data processing
+ `agreementTermsAndConditions`: `true` (boolean, optional) - flag indicating already approved terms and conditions
+ `gatewayRedirectUrl` (string, required) - Gateway redirect URL. Redirect user to this URL if state is PROCESSING and stateReason is PROCESSING_ADDITIONAL_DATA or PROCESSING_VERIFICATION or PROCESSING_REDIRECT_NEEDED.

## Customer (object)
Customer data

### Properties
+ `fullName`: `Ing. John Newborn, Csc.` (string, optional) - Customer full name, including academical degrees and salutation.
+ `firstName`: `John` (string, optional) -  Customer first (given) name
+ `lastName`: `Newborn` (string, optional) - Customer last (family) name
+ `honourBeforeName`: `Ing.` (string, optional) - academical degree, in front of the name
+ `honourAfterName`: `CSc.` (string, optional) - academical degree, behind name
+ `email`: `john.newborn@country.com` (string, required) - E-mail address of customer
+ `phoneNumber` (PhoneNumber, required) - phone number
+ `addresses` (array[Address], optional) - addresses. Only `PERMANENT` and `CONTACT` types are allowed.
+ `tin`: `12333321` (string, optional) - tax identification number (ICO)
+ `vatin`: `CZ8402154456` (string, optional) - VAT identification number
+ `extraData` (CustomerExtraData, optional) - additional data, that may improve the approval probability


## CustomerExtraData (object)


### Properties
+ `transactionsNumber`: 10 (number, optional) - Historical count of customer's cash transactions made in partner's e-shop
+ `cashlessTransactionsNumber`: 5 (number, optional) - Historical count of customer's cashless transactions made in partner's e-shop
+ `transactionsSum` (Amount, optional) - Sum of all cash transactions made in partner's e-shop
+ `cashlessTransactionsSum` (Amount, optional) - Sum of all cashless transactions made in partner's e-shop 
+ `latestTransactionDate`: `2017-01-10` (string, optional) - newest transaction date on partner e-shop.
+ `earliestTransactionDate`: `2015-10-12` (string, optional) - oldest transaction date on partner e-shop
+ `pageTotalTime`: 250 (number, optional) - Total time spent on partners website (in seconds)
+ `pageReviewsTime`: 100 (number, optional) - Total time spent on partners website in review and comments sections (in seconds)
+ `cartItemsRemoved`: 2 (number, optional) - Total count of removed items form shopping basket during current shopping
+ `itemsViewed`: 10 (number, optional) - Number of viewed pages with products


## OrderItemsChangeRequest (object)
Object used to change order.

### Properties
+ `orderItems` (array[OrderItem], optional) - List of changed items. All items are considered when empty
+ `invoice` (Document, optional) - Attached file (invoice, proforma invoice, credit note, ...)
+ `variableSymbol`: `122a111` (string, optional) - Variable symbol of the new document (invoice, proforma invoice, credit note,...)
+ `sendDate`: `2017-01-12` (string, optional) - Shipping date
+ `deliveryCarrier` (DeliveryCarrier, optional) - Carrier 
+ `deliveryDate`: `2017-01-15` (string, optional) - Delivery date
+ `deliveryTrackingNumber`: `EEX1221` (string, optional) - Delivery tracking number
+ `totalPrice` (Amount, optional) - Total amount of items (from orderItems array), including VAT - required when invoice is attached
+ `totalVat` (VatAmount, optional) - New total VAT amount for all items (from orderItems array) - required when invoice is attached


## ApplicationRequestOrder (object)
Order information, needed to create an application.

### Properties
+ `number`: `AA234` (string, required) - order number (internal for e-shop)
+ `variableSymbols` (array[string], optional) - variable symbols (internal for e-shop)
+ `totalPrice` (Amount, required) - total order amount, including VAT
+ `totalVat` (array[VatAmount], required) - total VAT amounts split by their VAT rates
+ `addresses` (array[Address], required) - addresses. Only `BILLING` and `DELIVERY` types are allowed.
+ `deliveryType` (enum, optional) - delivery type, for `DELIVERY_CARRIER` type can be further specified by DeliveryCarrier attribute.Typ doručení. Dopravcem, osobní převzetí, online doručení atd.
    + `PERSONAL_BRANCH` - personal collection at branch
    + `PERSONAL_PARTNER` - personal collection at partner network
    + `ONLINE` - online delivery (e.g. for intangible assets)
+ `deliveryCarrier` (DeliveryCarrier, optional) - delivery carrier, when applicable.
+ `reservationDate`: `2017-01-20` (string, optional)

   Date and time until order is reserved. 

   After this date, e-shop does not guarantee items availability (if application processing is longer, it may endanger order fullfillment).
    
+ `items` (array[OrderItem], required) - order items
+ `documents` (array[Document], optional) - attached documents (invoices etc.)


## Order (ApplicationRequestOrder)
Order information.

### Properties
+ `state` (enum, required) - Order state.
    + `PROCESSING` - order is being processed by merchant
    + `SENT` - all order items was sent to customer
    + `DELIVERED` - all order items was delivered to customer
    + `RETURNED` - all order items was returned to merchant
    + `CANCELLED` - order was fully cancelled
+ `deliveryDate`: `2017-01-17` (string, optional) - date and time of delivery
+ `deliveryTrackingNumber`: `EX12221` (string, optional) - delivery tracking number
+ `sentDate`: `2017-01-12` (string, optional) - date and time of order shipping


## OrderItem (object)
Item on order

### Properties
+ `type` (enum, optional) - item type
    + `PHYSICAL`
    + `DISCOUNT` 
    + `SHIPPING_FEE`
    + `SALES_TAX`
    + `DIGITAL`
    + `GIFT_CARD`
    + `STORE_CREDIT`
    + `FEE`
+ `state` (enum, required) - Order state.
    + `PROCESSING` - order item delivery is being processed by merchant
    + `SENT` - items wa sent to customer
    + `DELIVERED` - order item was delivered to customer
    + `RETURNED` - order item was returned to merchant
    + `CANCELLED` - order item was cancelled
+ `code`: `EXC4677-1a` (string, optional) - internal code for item (internal to e-shop). Used to better identify the item for future changes
+ `ean`: 888462064002 (string, optional) - EAN code.
+ `name`: `iPhone 6s 32GB SpaceGray` (string, required) - item name
+ `variant`: `32GB SpaceGray` (string, optional) - item variant
+ `description`: `Mobile phone with 32GB of RAM` (string, optional)
+ `producer`: `Apple` (string, optional)
+ `categories`: `mobile phones`,`iPhone` (array[string], optional) - item categories
+ `quantity`: 1 (number, optional) - item quantity
+ `unitPrice` (Amount, optional) - price per one piece
+ `unitVat` (VatAmount, optional) - VAT amount per one piece
+ `totalPrice` (Amount, required) - total price for all pieces, VAT inclusive
+ `totalVat` (VatAmount, required) - total VAT amount for all pieces
+ `image` (File, optional) - item image
+ `productUrl`: `https://www.example.com?itemId=10` (string, optional) - URL of the item in e-shop
+ `sendDate`: `2017-01-10` (string, optional) - date when item was sent. Only when the whole order was NOT sent at once.
+ `deliveryDate`: `2017-01-12` (string, optional) - date when item was delivered. Only when the whole order was NOT sent at once.
+ `deliveryTrackingNumber: `EX21121` (string, optional) - Tracking number for the item. Only when the whole order was NOT sent at once.


## File (object)


### Properties
+ `filename`: `invoice.pdf` (string, optional) - file name.
+ One Of
    + `content`: `RmlsZSBjb250ZW50cy4gwq9cXyjjg4QpXy/Crw==` (string, required)

        File content - Base64 encoded, maximum size is 500kB
    
    + `url`: `https://www.partner.com/file?id=12345` (string, required) - file URL.


## Document (object)
Attached document (e.g. invoice, credit note etc.)

### Properties
+ `type` (enum, required) - Type of the document
    + `INVOICE` - Invoice
    + `PROFORMA_INVOICE` - Proforma invoice
    + `CREDIT_NOTE` - Credit note
    + `OTHER` - Other document type
+ `file` (File, required) - Attached file
+ `description`: `This is an invoice` (string, optional) - File description
+ `extraData` (DocumentExtraData, optional) - Additional data, if applicable


## DocumentExtraData (object)


### Properties
+ `variableSymbol`: `112254asdf` (string, optional) - variable symbol (internal for e-shop)


## InvoiceInfo (object)
Billing information, to be included in invoice.

### Properties
+ `fullName`: `Ing. Jan Novák, Csc.` (string, required) - Customer full name, including academical degrees and salutation (Mr./Mrs./..).
+ `address` (Address, required) - Address. Only `BILLING` address type is allowed.
+ `dueDate`: `2017-06-20` (string, optional) - Invoice due date. If not specified, default value will be used by partner.
+ `accountNumber` (AccountNumber, required) - Account number in format.

## InvoiceInfoRequest (object)
Request for generating invoice info.

### Properties
+ One of
    + `customerDueDateCategory` (enum, optional) - Category of the due date. See "precheck" method response.
        + `CATEGORY_CLASSIC` - customer with classic due date (14 days, with the exception of events (Christmas, etc.))
        + `CATEGORY_EXTENDED` - customer with extended due date (20th day of next month, with the exception of events (Christmas, etc.))
    + `orderNumber` (string, optional) - Order number.
    + `orderVariableSymbol` (string, optional) - Variable symbol.
    + `applicationId` (string, optional) - Application identifier.
+ `billingDate` (string, optional) - Date of issuing an invoice. Default value: today.

## AccountNumber (object)
Account number with bank code.

### Properties
+ `accountNumber` `123-123456789` (string, required) - Account number (IBAN, BIC, etc.).
+ `bankCode` `1234` (string, required) - Bank code (SWIFT, etc.).

## InstallmentProgram (object)
Installment programs

### Properties
+ `type` (enum, optional) - Program type
    + MINIMAL - Lowest installment
    + FAVOURITE - Recommended (favourite) installment program
    + OTHER - Other
+ `installment` (Amount, optional) - monthly installment amount
+ `numberOfInstallments`: 10 (number, optional) - installment count
+ `detail` (Detail, optional)
    Calculation detailed information.
    Only available for calculations received by calling `POST /installment-programs`
    Not available for `POST /installment-programs-offers/` 


## Detail (object)

### Properties
+ `installmentDay`: 20 (number, optional)
    Installment date (day in month)
    
+ `installmentFirstDate`: `2017-05-20` (string, optional)
    Date of the first installment
    
+ `installmentLastDate`: `2018-03-20` (string, optional)
    Date of the last installment
    
+ `annualInterestRate`: 0.17 (number, optional)
    Annual interest rate
    
+ `predictedProvisionDate`: `2017-05-20` (string, optional)
    Predicted provision date
    
+ `paidBack` (Amount, optional) - Total amount paid by customer
+ `rpsn`: 0.23 (number, optional)
    RPSN
    
+ `legalline`: "Uvedené hodnoty jsou spočítány k datu poskytnutí 18.1.2017, datu 1. splátky 20.1.2017 a se splatností všech dalších splátek k 20. dni v měsíci počítaje 20.1.2017. Nejedná se o nabídku či veřejnou nabídku. Platí při splnění podmínek Home Credit...." (string, optional)
    Text interpretation of the offer


## InstallmentProgramsDownPayments (object)
Down payments information - the lowest down payment possible, the maximum down payment possible and a size of one step between them.

### Properties
+ `minimum` (Amount, optional)
    The lowest down payment amount
    e.g. 0 (0 Kč)
+ `maximum` (Amount, optional)
    Maximum down payment amount
    e.g. 2500 (2 500 Kč)
+ `step` (Amount, optional)
    Size of one step between the lowest and maximum down payment amounts
    e.g. 500 (500 Kč)
    Available down payments could be (min 0, max 2500):
    0, 500, 1000, 1500, 2000, 2500
    

## Limits (object)
Customer's limits

### Properties
+ `availableLimit` (Amount, required) - Customer's available limit
+ `totalLimit` (Amount, required) - Customer's global limit


## Payment (object)
Payment information

### Properties
+ `paymentId` (string, required) - Payment identifier
+ `date`: `2017-05-20` (string, required) - Payment date
+ `applicationId` (string, required) - Application ID that this payment belongs to
+ `value` (Amount, required) - Payment amount
+ `invoice` (InvoiceInfo, required) - Invoice data.


## MerchantUrls (object)
Collection of URLs used for redirection of a customer back to a partner website or as a notification endpoint

### Properties
+ `approvedRedirect` (string, required) - URL of the partner used for redirection of the customer back to partner website (from HCO gateway) after application approval.
+ `rejectedRedirect` (string, required) - URL of the partner used for redirection of the customer back to partner website (from HCO gateway) after application rejection.
+ `notificationEndpoint` (string, required) - URL of the partner used as a notification endpoint for obtaining important updates about application (approval, rejection, storno, etc.).
+ `paymentsEndpoint` (string, optional) - URL of the partner used as a notification endpoint for obtaining information about payments connected with application.
+ `changeEndpoint` (string, optional) - URL of the partner used as a endpoint for processing information about order changes made by customer in HC.


## ApplicationRequest (object)
Funding application

### Properties
+ `customer` (Customer, required) - Customer information
+ `order` (ApplicationRequestOrder, required) - Order information
+ `type` (enum, optional) - Financing type 
    + `DEFERRED_PAYMENT` - Pay later ("zaplať později")
    + `TRY_AND_PAY` - Customer pay after he tries the goods. ("vyzkoušej a zaplať")
    + `INSTALMENT` - Pay in monthly instalments ("nákup na splátky")
    + `SUBSCRIPTION` - Recurring payment ("předplatné, nebo opakovaná platba")
+ One Of
    - `settingsInstalment` - Settings for INSTALMENT Application type.
        + `preferredMonths`: 10 (number, optional) - Preferred number of installments (in months)
        + `preferredInstallment` (Amount, optional) - Preferred repayment amount
        + `preferredDownPayment` (Amount, optional) - Preferred downpayment amount
        + `productCode`: `a122ax` (string, optional) - Product code, this indicates previous calculation result
        + `productSetCode`: `bc11523` (string, optional) - Product set code, this will limit further calculations
    - `settingsSubscription` - Properties Settings for SUBSCRIPTION Application type.
        + `paymentFrequency` (enum, optional) - payment frequency for recurring payment
            + `WEEKLY` - Payment with weekly frequency. Repeated every week at the same day as set in subscriptionPaymentFirstDate.
            + `MONTHLY` - Payment with monthly frequency. Repeated every month at the same day as set in subscriptionPaymentFirstDate.
            + `QUARTERLY` - Payment with quarterly frequency. Repeated every 3 months at the same day as set in subscriptionPaymentFirstDate.
        + `paymentFirstDate`: `2016-10-12` (string, optional) - first payment date for recurring payment
+ `agreementPersonalDataProcessing`: `true` (boolean, required) - Personal data processing agreement
+ `agreementTermsAndConditions`: `true` (boolean, optional) - Terms and conditions agreement
+ `precheckIds` (array[string], optional) - Array of all precheck ids related to this application. See precheck operations and it's response (PrecheckResults).
+ `merchantUrls` (MerchantUrls, optional) - Collection of partner's URLs used for redirection of a customer back to a partner website or as a notification endpoint

## ApplicationRequestResult (object)
Funding application response

### Properties
+ `id` (string, required) - Unique ID of the application
+ `state` (string, required) - State of the application
+ `gatewayRedirectUrl` (string, required) - Gateway redirect URL. Redirect user to this URL.

## AdditionalDataRequest (object)
Additional data about the customer.

### Properties
+ `personalId`: 720320/1234 (string, optional) - Personal identification number (format XXXXXX/YYYY)
+ `idCard`: 123456789 (string, optional) - ID card number
+ `idCardExpiryDate`: `2020-05-19` (string, optional) - ID card expiration date
+ `idCardScan` (IdCardScan, optional) - ID card scan


## IdCardScan (object)


### Properties
+ `front` (File, optional) - Front side
+ `back` (File, optional) - Back side


## InstallmentProgramsRequest (object)


### Properties
+ `productCode`: `a122ax` (string, required) - Product code, this indicates previous calculation result
+ `price` (Amount, required) - Goods price
+ `downPayment` (Amount, optional) - Down payment amount (default is 0)


## InstallmentProgramsOffersRequest (object)


### Properties
+ `productSetCode`: `bc11523` (string, required) - Product set code, this will limit further calculations
+ `price` (Amount, required) - Goods price
+ `downPayment` (Amount, optional) - Down payment amount (default is 0)


## InstallmentProgramsDownPaymentsRequest (object)


### Properties
+ `productSetCode`: `bc11523` (string, required) - Product set code, this will limit further calculations
+ `price` (Amount, required) - Goods price


## PrecheckRequest (object)
Precheck data (has similar structure as `Application`).

### Properties
+ `customer` (Customer, optional) - Customer data
+ `order` (Order, optional) - Order data 
+ `fingerprintComponents` (array[string], optional) - Fingerprints components
+ `ipAddress` (string, optional) - IPv4 or IPv6 address of a customer
+ `agreementPersonalDataProcessing`: `true` (boolean, optional) - Flag indicating already approved personal data processing
+ `type` (enum, optional) - Financing type 
    + `DEFERRED_PAYMENT` - Pay later ("zaplať později")
    + `TRY_AND_PAY` - Customer pay after he tries the goods. ("vyzkoušej a zaplať")
    + `INSTALMENT` - Pay in monthly instalments ("nákup na splátky")
    + `SUBSCRIPTION` - Recurring payment ("předplatné, nebo opakovaná platba")
+ One Of
    - `settingsInstalment` - Settings for INSTALMENT Application type.
        + `preferredMonths`: 10 (number, optional) - Preferred number of installments (in months)
        + `preferredInstallment` (Amount, optional) - Preferred repayment amount
        + `preferredDownPayment` (Amount, optional) - Preferred downpayment amount
        + `productCode`: `a122ax` (string, optional) - Product code, this indicates previous calculation result
        + `productSetCode`: `bc11523` (string, optional) - Product set code, this will limit further calculations
    - `settingsSubscription` - Properties Settings for SUBSCRIPTION Application type.
        + `paymentFrequency` (enum, optional) - payment frequency for recurring payment
            + `WEEKLY` - Payment with weekly frequency. Repeated every week at the same day as set in subscriptionPaymentFirstDate.
            + `MONTHLY` - Payment with monthly frequency. Repeated every month at the same day as set in subscriptionPaymentFirstDate.
            + `QUARTERLY` - Payment with quarterly frequency. Repeated every 3 months at the same day as set in subscriptionPaymentFirstDate.
        + `paymentFirstDate`: `2016-10-12` (string, optional) - first payment date for recurring payment


## PrecheckResult (object)
Precheck result.

### Properties
+ `type` (enum, required) - Precheck result type for Funding type.
    + `DEFERRED_PAYMENT` - Pay later ("zaplať později")
    + `TRY_AND_PAY` - Customer pay after he tries the goods. ("vyzkoušej a zaplať")
    + `INSTALMENT` - Pay in monthly instalments ("nákup na splátky")
    + `SUBSCRIPTION` - Recurring payment ("předplatné, nebo opakovaná platba")
+ `recommendation` (boolean, required) - A recommendation of whether the order should be passed to the HCO.
    true = Application is going to be likely approved.
    false = Application is going to be likely rejected.
+ `probabilityOfApproval` (number, required) - Probability of approval.
    0 = 0% to be approved
    1 = 100% to be approved
    
    Partner can create custom logic not to follow the recommendation (be more strict or benevolent).
+ `completeness` (number, optional) - Completness of the result. <0, 1> The lower is the value, the lower accuracy of the result.
+ `code` (enum, required) - Result code.
    + `OK`
    + `UNKNOWN`
    + `ADDITIONAL_DATA_SECURITY` - The customer will be ask to send additional data for security reasons.
    + `ADDITIONAL_DATA_LIMIT` - The customer has insufficient limit and will be ask to send additional data to increase limit.
    + `INSUFFICIENT_LIMIT` - The customer has insufficient limit and there is no way to increase it.
    + `INSUFFICIENT_LIMIT_OPPORTUNITY` - The customer has insufficient limit and can increase it by paying previous not paid orders.
    + `DETAILS_NOT_MATCHING` - We know do customer, but hit personal details does not match with details in his HCO account. Customer will be asked for correcting not matching details.
+ `customerType` (enum, required) - Customer type.
    + `UNKNOWN` - Customer is uknown for HCO.
    + `FIRST_ORDER` - HCO knows the customer. Customer has no paid orders.
    + `FULL` -  HCO knows the customer. Customer has at least one paid order.
    + `BLOCKED` - HCO knows the customer. Customer is blocked.
+ `customerDueDateCategory` (enum, required)
    + `CATEGORY_CLASSIC` - customer with classic due date (14 days, with the exception of events (Christmas, etc.))
    + `CATEGORY_EXTENDED` - customer with extended due date (20th day of next month, with the exception of events (Christmas, etc.))
+ `message` (string, optional) - Custom message for customer.
    Examples:
    “V HCO peněžence nemáte dostatečný limit.”
    “Uveďte do objednávky jméno a příjmení, které používáte ve službě HCO.”
    etc.
+ `additionalData` (array[string], optional) - List of additional data that customer has to send to 
    Possible values in array: `PERSONAL_ID`, `ID_CARD_NO`, `ID_CARD_EXPIRY_DATE`, `ID_CARD_SCAN`.

## PrecheckResults (object)
Precheck results.

### Properties
+ `id` (string, required) - Unique identificator of precheck. Send this identificator in ApplicationRequest for better approval rate.
+ `results` (array[PrecheckResult], required) - Precheck results for each type of product.
+ `limits` (Limits, optional)

    Limity zákazníka. 
    
    Pokud zákazníka neznáme, jsou výše limitů odhadnuty.
    
    Pokud zákazníka známe, jedná se o aktuální limity. Pokud zákazník dal souhlas o předávání limitů. TODO legal.

## OrderChangeRequest (object)
Order change request data (HC asks partner to correct order data).

### Properties
+ `applicationId` (string, required) - Application identifier.
+ `type` (enum, required) - Change type.
    + PERSONAL_INFO - HC is trying correct customer's personal info (typos in name, surname... etc.).
    + ORDER_ITEMS - HC received order items change proposal from customer.
    + DELIVER_ADDRESS - HC received delivery address change proposal from customer.
+ `order` (Order, required) - Corrected order data.

## Error (object)
+ code: `ERR_1000_SOME_ERROR_CODE` (string, required) - unique internal error code
+ message: `Some error/validation message description` (string, required) - human readable error description (non-localized)
+ severity (enum, required)
    + ERROR - critical error, execution cannot continue. This MUST be indicated also by appropriate HTTP status code
    + WARN - non-critical error, execution can continue but further user interaction is advisable. This MIGHT be indicated also by appropriate HTTP status code
    + INFO - information only, execution can continue without user interaction
+ attribute: `personalBirthNumber` (string, optional) - json path of request attribute that caused the error (if applicable)    
+ ticketId: `UAT1:AMS:20160516-091658.450:45e4` (string, optional) - internal ticket ID, used for error backtracking

## Errors (object)
+ errors: `` (array[Error], fixed-type, required) - array with errors

## PagingInfo (object)
+ itemsPerPage: 10 (number, required) - number of items per page
+ nextPage: `transactions?sort=category&limit=10&after=25` (string, optional) - request to retrieve next page, if it exists and can be unambiguously specified
+ prevPage: `transactions?sort=category&limit=10&before=25` (string, optional) - request to retrieve previous page, if it exists and can be unambiguously specified